import "strings"
import "types"

_modules = {
	"root": {
		"data": {
			"aws_ami": {
				"ubuntu": {
					"config": {
						"filter": [
							{
								"name": "name",
								"values": [
									"ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*",
								],
							},
							{
								"name": "virtualization-type",
								"values": [
									"hvm",
								],
							},
						],
						"most_recent": true,
						"owners": [
							"099720109477",
						],
					},
					"provisioners": null,
					"references": {
						"filter": [
							{
								"name":   [],
								"values": [],
							},
							{
								"name":   [],
								"values": [],
							},
						],
						"most_recent": [],
						"owners":      [],
					},
				},
			},
		},
		"modules": {},
		"outputs": {
			"catapp_ip": {
				"depends_on":  [],
				"description": "",
				"references": [
					"aws_eip.hashicat.public_ip",
					"aws_eip.hashicat",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"catapp_url": {
				"depends_on":  [],
				"description": "",
				"references": [
					"aws_eip.hashicat.public_dns",
					"aws_eip.hashicat",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {},
						"references": {
							"region": [
								"var.region",
							],
						},
						"version": "3.42.0",
					},
				},
				"config": {},
				"references": {
					"region": [
						"var.region",
					],
				},
				"version": "3.42.0",
			},
		},
		"resources": {
			"aws_eip": {
				"hashicat": {
					"config": {
						"vpc": true,
					},
					"provisioners": null,
					"references": {
						"instance": [
							"aws_instance.hashicat.id",
							"aws_instance.hashicat",
						],
						"vpc": [],
					},
				},
			},
			"aws_eip_association": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"allocation_id": [
							"aws_eip.hashicat.id",
							"aws_eip.hashicat",
						],
						"instance_id": [
							"aws_instance.hashicat.id",
							"aws_instance.hashicat",
						],
					},
				},
			},
			"aws_instance": {
				"hashicat": {
					"config": {
						"associate_public_ip_address": true,
					},
					"provisioners": null,
					"references": {
						"ami": [
							"data.aws_ami.ubuntu.id",
							"data.aws_ami.ubuntu",
						],
						"associate_public_ip_address": [],
						"instance_type": [
							"var.instance_type",
						],
						"key_name": [
							"aws_key_pair.hashicat.key_name",
							"aws_key_pair.hashicat",
						],
						"subnet_id": [
							"aws_subnet.hashicat.id",
							"aws_subnet.hashicat",
						],
						"tags": [
							"var.prefix",
						],
						"vpc_security_group_ids": [
							"aws_security_group.hashicat.id",
							"aws_security_group.hashicat",
						],
					},
				},
			},
			"aws_internet_gateway": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"tags": [
							"var.prefix",
						],
						"vpc_id": [
							"aws_vpc.hashicat.id",
							"aws_vpc.hashicat",
						],
					},
				},
			},
			"aws_key_pair": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"key_name": [
							"local.private_key_filename",
						],
						"public_key": [
							"tls_private_key.hashicat.public_key_openssh",
							"tls_private_key.hashicat",
						],
					},
				},
			},
			"aws_route_table": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"vpc_id": [
							"aws_vpc.hashicat.id",
							"aws_vpc.hashicat",
						],
					},
				},
			},
			"aws_route_table_association": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"route_table_id": [
							"aws_route_table.hashicat.id",
							"aws_route_table.hashicat",
						],
						"subnet_id": [
							"aws_subnet.hashicat.id",
							"aws_subnet.hashicat",
						],
					},
				},
			},
			"aws_security_group": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"name": [
							"var.prefix",
						],
						"tags": [
							"var.prefix",
						],
						"vpc_id": [
							"aws_vpc.hashicat.id",
							"aws_vpc.hashicat",
						],
					},
				},
			},
			"aws_subnet": {
				"hashicat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"cidr_block": [
							"var.subnet_prefix",
						],
						"tags": [
							"var.prefix",
						],
						"vpc_id": [
							"aws_vpc.hashicat.id",
							"aws_vpc.hashicat",
						],
					},
				},
			},
			"aws_vpc": {
				"hashicat": {
					"config": {
						"enable_dns_hostnames": true,
					},
					"provisioners": null,
					"references": {
						"cidr_block": [
							"var.address_space",
						],
						"enable_dns_hostnames": [],
						"tags": [
							"var.prefix",
							"var.region",
						],
					},
				},
			},
			"random_id": {
				"app-server-id": {
					"config": {
						"byte_length": 8,
					},
					"provisioners": null,
					"references": {
						"byte_length": [],
						"prefix": [
							"var.prefix",
						],
					},
				},
			},
			"tls_private_key": {
				"hashicat": {
					"config": {
						"algorithm": "RSA",
					},
					"provisioners": null,
					"references": {
						"algorithm": [],
					},
				},
			},
		},
		"variables": {
			"address_space": {
				"default":     "10.0.0.0/16",
				"description": "The address space that is used by the virtual network. You can supply more than one address space. Changing this forces a new resource to be created.",
			},
			"admin_username": {
				"default":     "hashicorp",
				"description": "Administrator user name for mysql",
			},
			"height": {
				"default":     "400",
				"description": "Image height in pixels.",
			},
			"instance_type": {
				"default":     "t2.micro",
				"description": "Specifies the AWS instance type.",
			},
			"placeholder": {
				"default":     "placekitten.com",
				"description": "Image-as-a-service URL. Some other fun ones to try are fillmurray.com, placecage.com, placebeard.it, loremflickr.com, baconmockup.com, placeimg.com, placebear.com, placeskull.com, stevensegallery.com, placedog.net",
			},
			"prefix": {
				"default":     null,
				"description": "This prefix will be included in the name of most resources.",
			},
			"region": {
				"default":     "us-east-1",
				"description": "The region where the resources are created.",
			},
			"subnet_prefix": {
				"default":     "10.0.10.0/24",
				"description": "The address prefix to use for the subnet.",
			},
			"width": {
				"default":     "600",
				"description": "Image width in pixels.",
			},
		},
	},
}

module_paths = [
	[],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
